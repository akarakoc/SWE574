# Generated by Django 3.0.3 on 2020-05-16 09:02

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityStreams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Communities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter community name', max_length=200, null=True)),
                ('description', models.CharField(help_text='Enter community description', max_length=200, null=True)),
                ('communityHash', models.CharField(help_text='Enter community hash', max_length=200, null=True)),
                ('communityPrv', models.BooleanField(default=False)),
                ('communityPhoto', models.CharField(help_text='community photo', max_length=200, null=True)),
                ('communityTags', models.CharField(help_text='Enter community Tags', max_length=2000, null=True)),
                ('communityCreationDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='communityUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickName', models.CharField(help_text='Enter your nickname', max_length=200, null=True)),
                ('userName', models.CharField(help_text='Enter your username', max_length=200, null=True)),
                ('userSurname', models.CharField(help_text='Enter your surname', max_length=200, null=True)),
                ('userMail', models.EmailField(max_length=254)),
                ('userPassword', models.CharField(help_text='Enter your password', max_length=200, null=True)),
                ('creationDate', models.DateTimeField(null=True)),
                ('communityPoint', models.CharField(help_text='Community Point', max_length=200, null=True)),
                ('userBio', models.CharField(help_text='Community Point', max_length=200, null=True)),
                ('userBirthDay', models.CharField(help_text='Community Point', max_length=200, null=True)),
                ('userPhoto', models.CharField(help_text='Community Point', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Datatypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter ypur datatype', max_length=200, null=True)),
                ('datatypeCreationDate', models.DateTimeField(null=True)),
                ('datatypeEditionDate', models.DateTimeField(null=True)),
                ('datatypeTags', models.CharField(help_text='Enter datatype Tags', max_length=2000, null=True)),
                ('datatypeHash', models.CharField(help_text='Enter datatype hash', max_length=200, null=True)),
                ('datatypeCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datatypecreator', to='streampage.communityUsers')),
                ('datatypeEditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datatypeeditor', to='streampage.communityUsers')),
                ('relatedCommunity', models.ForeignKey(help_text='Select related community', null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('subscribers', models.ManyToManyField(help_text='Select members', related_name='subscribers', to='streampage.communityUsers')),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entryHash', models.CharField(help_text='Enter name of type', max_length=2000, null=True)),
                ('propertyName', models.CharField(help_text='Enter name of type', max_length=2000, null=True)),
                ('propertyValue', models.CharField(help_text='Enter name of type', max_length=2000, null=True)),
                ('postCreationDate', models.DateTimeField(null=True)),
                ('postTag', models.CharField(help_text='Enter Post Tags', max_length=2000, null=True)),
                ('postTagItems', models.CharField(help_text='Enter Post Tags Item', max_length=2000, null=True)),
                ('postCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postcreator', to='streampage.communityUsers')),
                ('relatedCommunityforPost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('relatedDatatypes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Datatypes')),
            ],
        ),
        migrations.CreateModel(
            name='PostsMetaHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postMetaHash', models.CharField(help_text='Enter name of type', max_length=200, null=True)),
                ('postCreationDate', models.DateTimeField(null=True)),
                ('postCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postmetacreator', to='streampage.communityUsers')),
                ('relatedCommunity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('relatedDatatypes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Datatypes')),
            ],
        ),
        migrations.CreateModel(
            name='Primitives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter your primitive data types', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagName', models.CharField(help_text='Enter Post Tag', max_length=2000, null=True)),
                ('tagItem', models.CharField(help_text='Enter Community Tag Item', max_length=2000, null=True)),
                ('userTag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usersTag', to='streampage.communityUsers')),
            ],
        ),
        migrations.CreateModel(
            name='UserCircle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circleOwner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.communityUsers')),
                ('circleUsers', models.ManyToManyField(help_text='Select Members', related_name='Followers', to='streampage.communityUsers')),
            ],
        ),
        migrations.CreateModel(
            name='ReportedPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportHash', models.CharField(help_text='Enter name of type', max_length=200, null=True)),
                ('reason', models.CharField(help_text='Enter name of type', max_length=200, null=True)),
                ('description', models.CharField(help_text='Enter name of type', max_length=2000, null=True)),
                ('reportPostCreationDate', models.DateTimeField(null=True)),
                ('relatedCommunity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('relatedMeta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.PostsMetaHash')),
                ('reportPostCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reporttcreator', to='streampage.communityUsers')),
            ],
        ),
        migrations.CreateModel(
            name='PostTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagName', models.CharField(help_text='Enter Post Tag', max_length=2000, null=True)),
                ('tagItem', models.CharField(help_text='Enter Community Tag Item', max_length=2000, null=True)),
                ('relatedPostTag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postsTag', to='streampage.Posts')),
            ],
        ),
        migrations.AddField(
            model_name='posts',
            name='relatedMeta',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.PostsMetaHash'),
        ),
        migrations.CreateModel(
            name='PostComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentHash', models.CharField(help_text='Enter name of type', max_length=200, null=True)),
                ('commentText', models.CharField(help_text='Enter name of type', max_length=200, null=True)),
                ('postCommentCreationDate', models.DateTimeField(null=True)),
                ('postCommentTag', models.CharField(help_text='Enter Post Tags', max_length=2000, null=True)),
                ('postCommentCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentcreator', to='streampage.communityUsers')),
                ('relatedCommunityforComment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('relatedMeta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.PostsMetaHash')),
            ],
        ),
        migrations.CreateModel(
            name='DatatypeFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter your datatype', max_length=200, null=True)),
                ('fieldCreationDate', models.DateTimeField(null=True)),
                ('fieldRequired', models.BooleanField(default=False)),
                ('fronttableShow', models.BooleanField(default=False)),
                ('enumerations', models.CharField(help_text='Enter the Enumerations', max_length=200, null=True)),
                ('fieldCreator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.communityUsers')),
                ('relatedComm', models.ForeignKey(help_text='Select related datatype', null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Communities')),
                ('relatedDatatype', models.ForeignKey(help_text='Select related datatype', null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Datatypes')),
                ('relatedPrimitives', models.ForeignKey(help_text='Select related primitive', null=True, on_delete=django.db.models.deletion.SET_NULL, to='streampage.Primitives')),
            ],
        ),
        migrations.CreateModel(
            name='DatatTypeTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagName', models.CharField(help_text='Enter Datatype Tag', max_length=2000, null=True)),
                ('tagItem', models.CharField(help_text='Enter Community Tag Item', max_length=2000, null=True)),
                ('datatypeTag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dataTag', to='streampage.Datatypes')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagName', models.CharField(help_text='Enter Community Tag', max_length=2000, null=True)),
                ('tagItem', models.CharField(help_text='Enter Community Tag Item', max_length=2000, null=True)),
                ('communityTag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commTag', to='streampage.Communities')),
            ],
        ),
        migrations.AddField(
            model_name='communities',
            name='communityCreator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator', to='streampage.communityUsers'),
        ),
        migrations.AddField(
            model_name='communities',
            name='communityMembers',
            field=models.ManyToManyField(help_text='Select members', related_name='members', to='streampage.communityUsers'),
        ),
        migrations.AddField(
            model_name='communities',
            name='communityPopularity',
            field=models.ManyToManyField(help_text='Vote', related_name='votes', to='streampage.communityUsers'),
        ),
    ]
